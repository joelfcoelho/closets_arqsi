// <auto-generated />
using System;
using ArmariosPorMedidaAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArmariosPorMedidaAPI.Migrations
{
    [DbContext(typeof(ArmariosPorMedidaContext))]
    partial class ArmariosPorMedidaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.Acabamento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("ID");

                    b.ToTable("Acabamentos");
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaID");

                    b.Property<string>("Nome");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcabamentoID");

                    b.Property<string>("Nome");

                    b.HasKey("ID");

                    b.HasIndex("AcabamentoID");

                    b.ToTable("Materiais");
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.Parte", b =>
                {
                    b.Property<int>("ParteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Altura");

                    b.Property<double>("Largura");

                    b.Property<string>("Nome");

                    b.Property<double>("Preco");

                    b.Property<double>("Profundidade");

                    b.HasKey("ParteID");

                    b.ToTable("Partes");
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Altura");

                    b.Property<double>("Largura");

                    b.Property<string>("Nome");

                    b.Property<double>("Preco");

                    b.Property<double>("Profundidade");

                    b.HasKey("ProdutoID");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.ProdutoParte", b =>
                {
                    b.Property<int>("ProdutoID");

                    b.Property<int>("ParteID");

                    b.HasKey("ProdutoID", "ParteID");

                    b.HasIndex("ParteID");

                    b.ToTable("ProdutoPartes");
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.ProdutoRestricao", b =>
                {
                    b.Property<int>("ProdutoID");

                    b.Property<int>("RestricaoID");

                    b.HasKey("ProdutoID", "RestricaoID");

                    b.HasIndex("RestricaoID");

                    b.ToTable("ProdutoRestricoes");
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.Restricao", b =>
                {
                    b.Property<int>("RestricaoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("RestricaoID");

                    b.ToTable("Restricoes");
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.Categoria", b =>
                {
                    b.HasOne("ArmariosPorMedidaAPI.Models.Categoria")
                        .WithMany("SubCategorias")
                        .HasForeignKey("CategoriaID");
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.Material", b =>
                {
                    b.HasOne("ArmariosPorMedidaAPI.Models.Acabamento", "Acabamento")
                        .WithMany()
                        .HasForeignKey("AcabamentoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.ProdutoParte", b =>
                {
                    b.HasOne("ArmariosPorMedidaAPI.Models.Parte", "Parte")
                        .WithMany("ProdutoPartes")
                        .HasForeignKey("ParteID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ArmariosPorMedidaAPI.Models.Produto", "Produto")
                        .WithMany("ProdutoPartes")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArmariosPorMedidaAPI.Models.ProdutoRestricao", b =>
                {
                    b.HasOne("ArmariosPorMedidaAPI.Models.Produto", "Produto")
                        .WithMany("ProdutoRestricoes")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ArmariosPorMedidaAPI.Models.Restricao", "Restricao")
                        .WithMany("ProdutoRestricoes")
                        .HasForeignKey("RestricaoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
